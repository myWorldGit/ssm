package com.lanpangzi.controller.business;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.lanpangzi.pojo.Information;
import com.lanpangzi.service.InformationService;
import com.lanpangzi.utils.MyResponse;
import com.lanpangzi.utils.PageResult;

/**
 * controller
 * 
 * @author Administrator
 *
 */
@Controller
@RequestMapping("/information")
public class InformationController {

	@Autowired
	private InformationService informationService;

	/**
	 * 返回全部列表
	 * 
	 * @return
	 */
	@RequestMapping(value = "/findAll", method = RequestMethod.POST)
	public List<Information> findAll() {
		return informationService.findAll();
	}

	/**
	 * 返回全部列表
	 * 
	 * @return
	 */
	@RequestMapping(value = "/findPage", method = RequestMethod.POST)
	public PageResult findPage(int page, int rows) {
		return informationService.findPage(page, rows);
	}

	/**
	 * 增加
	 * 
	 * @param information
	 * @return
	 */
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public MyResponse add(Information information) {
		try {
			informationService.add(information);
			return new MyResponse(1, "增加成功");
		} catch (Exception e) {
			e.printStackTrace();
			return new MyResponse(0, "增加失败");
		}
	}

	/**
	 * 修改
	 * 
	 * @param information
	 * @return
	 */
	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public MyResponse update(Information information) {
		try {
			informationService.update(information);
			return new MyResponse(1, "修改成功");
		} catch (Exception e) {
			e.printStackTrace();
			return new MyResponse(0, "修改失败");
		}
	}

	/**
	 * 获取实体
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping(value = "/findOne", method = RequestMethod.POST)
	public Information findOne(Integer id) {
		return informationService.findOne(id);
	}

	/**
	 * 批量删除
	 * 
	 * @param ids
	 * @return
	 */
	@RequestMapping(value = "/delete", method = RequestMethod.POST)
	public MyResponse delete(Integer[] ids) {
		try {
			informationService.delete(ids);
			return new MyResponse(1, "删除成功");
		} catch (Exception e) {
			e.printStackTrace();
			return new MyResponse(0, "删除失败");
		}
	}

	/**
	 * 查询+分页
	 * 
	 * @param brand
	 * @param page
	 * @param rows
	 * @return
	 */
	@RequestMapping("/search")
	public PageResult search(Information information, int page, int rows) {
		return informationService.findPage(information, page, rows);
	}

}
